plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.itsallbinary.tutorial.ai'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {

/*
Many spring dependencies are nto in central repo, so use spring's repo
 */
	maven {
		name = "Spring Milestones"
		url = uri("https://repo.spring.io/libs-milestone-local")
		/*mavenContent {
			releasesOnly()
		}*/
	}
	maven {
		name = "Spring Snapshots"
		url = uri("https://repo.spring.io/snapshot")
		/*mavenContent {
			snapshotsOnly()
		}*/
	}

	mavenCentral()
}

ext {
	set('springAiVersion', "1.0.0-M6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("org.springframework.ai:spring-ai-openai")
	implementation 'org.springframework.ai:spring-ai-anthropic-spring-boot-starter'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
//	implementation 'org.springframework.ai:spring-ai-vertex-ai-gemini-spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'dev.langchain4j:langchain4j-open-ai-spring-boot-starter:1.0.0-beta2'
	implementation 'dev.langchain4j:langchain4j-spring-boot-starter:1.0.0-beta2'
	implementation 'dev.langchain4j:langchain4j-easy-rag:1.0.0-beta2'

	implementation 'org.springframework.ai:spring-ai-mcp-client-spring-boot-starter'


	implementation("com.google.code.gson:gson:2.12.1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
